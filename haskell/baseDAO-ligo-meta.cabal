cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack

name:           baseDAO-ligo-meta
version:        0.4.0.0
description:    Tools and tests for the LIGO baseDAO contract.
author:         Serokell, Tocqueville Group
maintainer:     Serokell, Tocqueville Group
copyright:      2020-2021 TQ Tezos, 2021-2022 Tezos Commons
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    resources/lambdaDAO.tz
    resources/lambdaDAO_storage.tz
    resources/lambdaregistryDAO.tz
    resources/lambdaregistryDAO_storage.tz
    resources/lambdatreasuryDAO.tz
    resources/lambdatreasuryDAO_storage.tz
    resources/registryDAO.tz
    resources/treasuryDAO.tz
    resources/trivialDAO.tz
    resources/trivialDAO_storage.tz
    resources/registryDAO_storage.tz
    resources/treasuryDAO_storage.tz
    resources/plist_contract.tz
extra-doc-files:
    README.md

source-repository head
  type: git
  location: git@github.com:tezos-commons/baseDAO.git

library
  exposed-modules:
      Ligo.BaseDAO.Common.Types
      Ligo.BaseDAO.ErrorCodes
      Ligo.BaseDAO.LambdaDAO.Types
      Ligo.BaseDAO.RegistryDAO.Types
      Ligo.BaseDAO.TreasuryDAO.Types
      Ligo.BaseDAO.Types
      Ligo.BaseDAO.TZIP16Metadata
      Ligo.Typescript
      Ligo.Util
  other-modules:
      Paths_baseDAO_ligo_meta
  autogen-modules:
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      src
  default-extensions:
      AllowAmbiguousTypes
      BangPatterns
      BlockArguments
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DerivingVia
      EmptyCase
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      ImportQualifiedPost
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NegativeLiterals
      NoImplicitPrelude
      NumDecimals
      OverloadedLabels
      OverloadedStrings
      PatternSynonyms
      PolyKinds
      QuasiQuotes
      RankNTypes
      RecordWildCards
      RecursiveDo
      ScopedTypeVariables
      StandaloneDeriving
      StrictData
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeFamilies
      TypeOperators
      UndecidableInstances
      UndecidableSuperClasses
      ViewPatterns
      RebindableSyntax
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode -Wno-unused-do-bind
  build-depends:
      aeson
    , base-noprelude >=4.7 && <5
    , cleveland
    , containers
    , file-embed
    , filepath
    , fmt
    , lorentz
    , morley
    , morley-ledgers
    , morley-metadata
    , morley-prelude
    , named
    , template-haskell
    , text
    , universum
    , with-utf8
  default-language: Haskell2010

executable baseDAO-ligo-meta
  main-is: Main.hs
  other-modules:
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      app
  default-extensions:
      AllowAmbiguousTypes
      BangPatterns
      BlockArguments
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DerivingVia
      EmptyCase
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      ImportQualifiedPost
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NegativeLiterals
      NoImplicitPrelude
      NumDecimals
      OverloadedLabels
      OverloadedStrings
      PatternSynonyms
      PolyKinds
      QuasiQuotes
      RankNTypes
      RecordWildCards
      RecursiveDo
      ScopedTypeVariables
      StandaloneDeriving
      StrictData
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeFamilies
      TypeOperators
      UndecidableInstances
      UndecidableSuperClasses
      ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode
  build-depends:
      aeson-pretty
    , base-noprelude >=4.7 && <5
    , baseDAO-ligo-meta
    , morley
    , morley-prelude
    , optparse-applicative
    , universum
  default-language: Haskell2010

test-suite baseDAO-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Ligo.BaseDAO.Contract
      SMT.BaseDAO
      SMT.Common.Gen
      SMT.Common.Helper
      SMT.Common.Run
      SMT.Common.Types
      SMT.Model.BaseDAO.Contract
      SMT.Model.BaseDAO.Management
      SMT.Model.BaseDAO.Permit
      SMT.Model.BaseDAO.Proposal
      SMT.Model.BaseDAO.Proposal.FreezeHistory
      SMT.Model.BaseDAO.Proposal.Plist
      SMT.Model.BaseDAO.Proposal.QuorumThreshold
      SMT.Model.BaseDAO.Token
      SMT.Model.BaseDAO.Types
      SMT.RegistryDAO
      SMT.TreasuryDAO
      Test.Ligo.BaseDAO.Common
      Test.Ligo.BaseDAO.Common.Errors
      Test.Ligo.BaseDAO.Common.StorageHelper
      Test.Ligo.BaseDAO.ErrorCode
      Test.Ligo.BaseDAO.Management
      Test.Ligo.BaseDAO.Management.TransferOwnership
      Test.Ligo.BaseDAO.OffChainViews
      Test.Ligo.BaseDAO.Plist
      Test.Ligo.BaseDAO.Proposal
      Test.Ligo.BaseDAO.Proposal.Config
      Test.Ligo.BaseDAO.Proposal.Delegate
      Test.Ligo.BaseDAO.Proposal.Flush
      Test.Ligo.BaseDAO.Proposal.Propose
      Test.Ligo.BaseDAO.Proposal.Quorum
      Test.Ligo.BaseDAO.Proposal.Tokens
      Test.Ligo.BaseDAO.Proposal.Vote
      Test.Ligo.BaseDAO.Token
      Test.Ligo.BaseDAO.Types
      Test.Ligo.Common
      Test.Ligo.LambdaDAO
      Test.Ligo.LambdaRegistryDAO
      Test.Ligo.LambdaTreasuryDAO
      Test.Ligo.RegistryDAO
      Test.Ligo.RegistryDAO.Tests.Common
      Test.Ligo.RegistryDAO.Tests.EmptyProposal
      Test.Ligo.RegistryDAO.Tests.ExecuteWonProposal
      Test.Ligo.RegistryDAO.Tests.FlushRegistryUpdates
      Test.Ligo.RegistryDAO.Tests.FlushTransferProposal
      Test.Ligo.RegistryDAO.Tests.LargeProposal
      Test.Ligo.RegistryDAO.Tests.NotEnoughFrozen
      Test.Ligo.RegistryDAO.Tests.ProposeXtzProposal
      Test.Ligo.RegistryDAO.Tests.RegistryView
      Test.Ligo.RegistryDAO.Tests.RequiredFrozen
      Test.Ligo.RegistryDAO.Tests.TokensToBurn
      Test.Ligo.RegistryDAO.Tests.UpdateDelegate
      Test.Ligo.RegistryDAO.Tests.UpdateGuardian
      Test.Ligo.RegistryDAO.Tests.UpdateReceivers
      Test.Ligo.RegistryDAO.Tests.UpdateReceiversDelete
      Test.Ligo.RegistryDAO.Tests.ZeroXtz
      Test.Ligo.RegistryDAO.Types
      Test.Ligo.TreasuryDAO
      Test.Ligo.TreasuryDAO.Types
      Test.Plist.Contract
      Test.Plist.Property
      Test.Plist.Type
      Tree
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      test
  default-extensions:
      AllowAmbiguousTypes
      BangPatterns
      BlockArguments
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DerivingVia
      EmptyCase
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      ImportQualifiedPost
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NegativeLiterals
      NoImplicitPrelude
      NumDecimals
      OverloadedLabels
      OverloadedStrings
      PatternSynonyms
      PolyKinds
      QuasiQuotes
      RankNTypes
      RecordWildCards
      RecursiveDo
      ScopedTypeVariables
      StandaloneDeriving
      StrictData
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeFamilies
      TypeOperators
      UndecidableInstances
      UndecidableSuperClasses
      ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode -threaded -eventlog "-with-rtsopts=-N -A64m -AL256m"
  build-tool-depends:
      tasty-discover:tasty-discover
  build-depends:
      HUnit
    , aeson
    , base-noprelude >=4.7 && <5
    , baseDAO-ligo-meta
    , bytestring
    , cleveland
    , containers
    , cryptonite
    , fmt
    , hedgehog
    , lorentz
    , morley
    , morley-ledgers
    , morley-metadata
    , morley-metadata-test
    , morley-prelude
    , mtl
    , named
    , tasty
    , tasty-hedgehog
    , tasty-hunit-compat
    , universum
  default-language: Haskell2010
